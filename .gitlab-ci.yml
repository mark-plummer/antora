# generate job triggered by push; Netlify build triggered by same event
generate:
  stage: build
  except: 
    refs:
    - schedules
    - triggers
  image:
    name: antora/antora:2.0.0-rc.2
    entrypoint: [ /bin/sh, -c ]
  cache:
    paths:
    - .cache/
  script:
  - antora --pull --url=https://gitlab.com/$CI_PROJECT_PATH/-/jobs/$CI_JOB_ID/artifacts/browse/public antora-playbook.yml
  artifacts:
    expire_in: 1 week
    paths:
    - public/
# deploy/netlify job triggered by nightly schedule
trigger/netlify:
  stage: build
  only:
    refs:
    - schedules
    variables:
    - $NETLIFY_BUILD_HOOK
  image:
    name: antora/antora:2.0.0-rc.2
    entrypoint: [ /bin/sh, -c ]
  script:
  - curl -X POST -d '' -s $NETLIFY_BUILD_HOOK
# index job triggered when production Netlify deploy succeeds
# CI_PIPELINE_SOURCE=trigger, TRIGGER_ACTION=index, and CI_COMMIT_REF_NAME=master
# a trigger cannot see merge requests, so there's no concern of them triggering this job
index:
  stage: build
  only:
    refs:
    - triggers
    variables:
    # TRIGGER_ACTION defined by outgoing webhook in Netlify
    - $TRIGGER_ACTION == "disabled"
  except:
    # variables use OR logic
    variables:
    # ALGOLIA_APP_ID and ALGOLIA_API_KEY defined in CI configuration
    - $ALGOLIA_APP_ID == null
    - $ALGOLIA_API_KEY == null
  image:
    name: algolia/docsearch-scraper:steady
    entrypoint: [""]
  variables:
    APPLICATION_ID: $ALGOLIA_APP_ID
    API_KEY: $ALGOLIA_API_KEY
    CONFIG: $CI_PROJECT_DIR/docsearch/config.json
  before_script:
  - apt-get -qq update
  - apt-get install -y jq > /dev/null
  script:
  # just to be safe, verify the ref name is master; exit otherwise
  - if [ "$CI_COMMIT_REF_NAME" != "master" ]; then echo "Expected ref to be master"; exit 1; fi
  - cd /root
  # TODO remove workaround once https://github.com/algolia/docsearch-scraper/issues/425 is resolved
  - sed -i '/config[.]update_nb_hits/d' src/index.py
  - ALGOLIA_IDX_NAME=$(cat $CONFIG | jq -r '.index_name')
  # TODO remove workaround once https://github.com/algolia/docsearch-scraper/issues/426 is resolved
  - INDEXING_IN_PROGRESS=$(curl -s -H "X-Algolia-Application-Id:$ALGOLIA_APP_ID" -H "X-Algolia-API-Key:$ALGOLIA_API_KEY" "https://$ALGOLIA_APP_ID-dsn.algolia.net/1/indexes/${ALGOLIA_IDX_NAME}_tmp" | jq -r '.status? != 404')
  - if [ "$INDEXING_IN_PROGRESS" == "true" ]; then echo "Indexing already in progress. Skipping."; exit 0; fi
  - pipenv run python -m src.index
